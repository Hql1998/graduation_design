# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'naive_bayes_classifier.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Naive_Bayes_Dialog(object):
    def setupUi(self, Naive_Bayes_Dialog):
        Naive_Bayes_Dialog.setObjectName("Naive_Bayes_Dialog")
        Naive_Bayes_Dialog.resize(468, 645)
        self.verticalLayout = QtWidgets.QVBoxLayout(Naive_Bayes_Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox_1 = QtWidgets.QGroupBox(Naive_Bayes_Dialog)
        self.groupBox_1.setObjectName("groupBox_1")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox_1)
        self.verticalLayout_3.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_3.setSpacing(2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.groupBox = QtWidgets.QGroupBox(self.groupBox_1)
        self.groupBox.setEnabled(True)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setVerticalSpacing(3)
        self.gridLayout.setObjectName("gridLayout")
        self.groupBox_5 = QtWidgets.QGroupBox(self.groupBox)
        self.groupBox_5.setObjectName("groupBox_5")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.groupBox_5)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.auto_distribute_rb = QtWidgets.QRadioButton(self.groupBox_5)
        self.auto_distribute_rb.setChecked(True)
        self.auto_distribute_rb.setObjectName("auto_distribute_rb")
        self.horizontalLayout_3.addWidget(self.auto_distribute_rb)
        self.gaussian_distribute_rb = QtWidgets.QRadioButton(self.groupBox_5)
        self.gaussian_distribute_rb.setObjectName("gaussian_distribute_rb")
        self.horizontalLayout_3.addWidget(self.gaussian_distribute_rb)
        self.multinomial_distribute_rb = QtWidgets.QRadioButton(self.groupBox_5)
        self.multinomial_distribute_rb.setObjectName("multinomial_distribute_rb")
        self.horizontalLayout_3.addWidget(self.multinomial_distribute_rb)
        self.bernoulli_distribute_rb = QtWidgets.QRadioButton(self.groupBox_5)
        self.bernoulli_distribute_rb.setObjectName("bernoulli_distribute_rb")
        self.horizontalLayout_3.addWidget(self.bernoulli_distribute_rb)
        self.gridLayout.addWidget(self.groupBox_5, 0, 0, 1, 2)
        self.verticalLayout_3.addWidget(self.groupBox)
        self.groupBox_4 = QtWidgets.QGroupBox(self.groupBox_1)
        self.groupBox_4.setObjectName("groupBox_4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_4)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.load_model_cb = QtWidgets.QCheckBox(self.groupBox_4)
        self.load_model_cb.setEnabled(True)
        self.load_model_cb.setObjectName("load_model_cb")
        self.horizontalLayout_2.addWidget(self.load_model_cb)
        self.display_model_name_label = QtWidgets.QLabel(self.groupBox_4)
        self.display_model_name_label.setStyleSheet("")
        self.display_model_name_label.setObjectName("display_model_name_label")
        self.horizontalLayout_2.addWidget(self.display_model_name_label)
        self.open_model_btn = Open_Model_Btn(self.groupBox_4)
        self.open_model_btn.setEnabled(False)
        self.open_model_btn.setObjectName("open_model_btn")
        self.horizontalLayout_2.addWidget(self.open_model_btn)
        self.verticalLayout_3.addWidget(self.groupBox_4)
        self.verticalLayout_3.setStretch(0, 1)
        self.verticalLayout.addWidget(self.groupBox_1)
        self.groupBox_2 = QtWidgets.QGroupBox(Naive_Bayes_Dialog)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.save_model_btn = Save_Model_Btn(self.groupBox_2)
        self.save_model_btn.setEnabled(False)
        self.save_model_btn.setObjectName("save_model_btn")
        self.gridLayout_2.addWidget(self.save_model_btn, 5, 0, 1, 1)
        self.plot_roc_cb = QtWidgets.QCheckBox(self.groupBox_2)
        self.plot_roc_cb.setChecked(True)
        self.plot_roc_cb.setObjectName("plot_roc_cb")
        self.gridLayout_2.addWidget(self.plot_roc_cb, 0, 0, 1, 1)
        self.output_cla_rep_cb = QtWidgets.QCheckBox(self.groupBox_2)
        self.output_cla_rep_cb.setChecked(True)
        self.output_cla_rep_cb.setObjectName("output_cla_rep_cb")
        self.gridLayout_2.addWidget(self.output_cla_rep_cb, 1, 0, 1, 1)
        self.save_model_label = QtWidgets.QLabel(self.groupBox_2)
        self.save_model_label.setObjectName("save_model_label")
        self.gridLayout_2.addWidget(self.save_model_label, 5, 1, 1, 2, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.save_model_cb = QtWidgets.QCheckBox(self.groupBox_2)
        self.save_model_cb.setObjectName("save_model_cb")
        self.gridLayout_2.addWidget(self.save_model_cb, 4, 0, 1, 1)
        self.output_confusion_cb = QtWidgets.QCheckBox(self.groupBox_2)
        self.output_confusion_cb.setChecked(True)
        self.output_confusion_cb.setObjectName("output_confusion_cb")
        self.gridLayout_2.addWidget(self.output_confusion_cb, 1, 1, 1, 2)
        self.save_file_btn = Save_File_Btn(self.groupBox_2)
        self.save_file_btn.setEnabled(False)
        self.save_file_btn.setObjectName("save_file_btn")
        self.gridLayout_2.addWidget(self.save_file_btn, 3, 0, 1, 1)
        self.save_file_cb = QtWidgets.QCheckBox(self.groupBox_2)
        self.save_file_cb.setObjectName("save_file_cb")
        self.gridLayout_2.addWidget(self.save_file_cb, 2, 0, 1, 2)
        self.save_file_label = QtWidgets.QLabel(self.groupBox_2)
        self.save_file_label.setObjectName("save_file_label")
        self.gridLayout_2.addWidget(self.save_file_label, 3, 1, 1, 2, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignVCenter)
        self.verticalLayout.addWidget(self.groupBox_2)
        self.groupBox_3 = QtWidgets.QGroupBox(Naive_Bayes_Dialog)
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox_3)
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout_2.addWidget(self.textBrowser)
        self.verticalLayout.addWidget(self.groupBox_3)
        self.widget = QtWidgets.QWidget(Naive_Bayes_Dialog)
        self.widget.setMinimumSize(QtCore.QSize(0, 20))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.apply_btn = QtWidgets.QPushButton(self.widget)
        self.apply_btn.setObjectName("apply_btn")
        self.horizontalLayout.addWidget(self.apply_btn)
        self.reset_btn = QtWidgets.QPushButton(self.widget)
        self.reset_btn.setObjectName("reset_btn")
        self.horizontalLayout.addWidget(self.reset_btn)
        self.finish_btn = QtWidgets.QPushButton(self.widget)
        self.finish_btn.setObjectName("finish_btn")
        self.horizontalLayout.addWidget(self.finish_btn)
        self.verticalLayout.addWidget(self.widget)

        self.retranslateUi(Naive_Bayes_Dialog)
        QtCore.QMetaObject.connectSlotsByName(Naive_Bayes_Dialog)

    def retranslateUi(self, Naive_Bayes_Dialog):
        _translate = QtCore.QCoreApplication.translate
        Naive_Bayes_Dialog.setWindowTitle(_translate("Naive_Bayes_Dialog", "Naive Bayes Classifier"))
        self.groupBox_1.setTitle(_translate("Naive_Bayes_Dialog", "parameter setting"))
        self.groupBox.setTitle(_translate("Naive_Bayes_Dialog", "train a model"))
        self.groupBox_5.setTitle(_translate("Naive_Bayes_Dialog", "Select different distribution for your data"))
        self.auto_distribute_rb.setText(_translate("Naive_Bayes_Dialog", "Auto"))
        self.gaussian_distribute_rb.setText(_translate("Naive_Bayes_Dialog", "GaussianNB"))
        self.multinomial_distribute_rb.setText(_translate("Naive_Bayes_Dialog", "MultinomialNB"))
        self.bernoulli_distribute_rb.setText(_translate("Naive_Bayes_Dialog", "BernoulliNB"))
        self.groupBox_4.setTitle(_translate("Naive_Bayes_Dialog", "Or load a model"))
        self.load_model_cb.setText(_translate("Naive_Bayes_Dialog", "Load Model"))
        self.display_model_name_label.setText(_translate("Naive_Bayes_Dialog", "No File Selcted"))
        self.open_model_btn.setText(_translate("Naive_Bayes_Dialog", "Load model(joblib file)"))
        self.groupBox_2.setTitle(_translate("Naive_Bayes_Dialog", "Out Parameters"))
        self.save_model_btn.setText(_translate("Naive_Bayes_Dialog", "Save the Model"))
        self.plot_roc_cb.setText(_translate("Naive_Bayes_Dialog", "Plot ROC on training and testing datsets"))
        self.output_cla_rep_cb.setText(_translate("Naive_Bayes_Dialog", "Output classification report"))
        self.save_model_label.setText(_translate("Naive_Bayes_Dialog", "No Directory selected"))
        self.save_model_cb.setText(_translate("Naive_Bayes_Dialog", "Save fitted model into"))
        self.output_confusion_cb.setText(_translate("Naive_Bayes_Dialog", "Output confusion matrix"))
        self.save_file_btn.setText(_translate("Naive_Bayes_Dialog", "Save the Files"))
        self.save_file_cb.setText(_translate("Naive_Bayes_Dialog", "Save (transformed) training (and testng) file(s) to"))
        self.save_file_label.setText(_translate("Naive_Bayes_Dialog", "No Directory selected"))
        self.groupBox_3.setTitle(_translate("Naive_Bayes_Dialog", "Output field"))
        self.apply_btn.setText(_translate("Naive_Bayes_Dialog", "Apply"))
        self.reset_btn.setText(_translate("Naive_Bayes_Dialog", "Reset From Previous"))
        self.finish_btn.setText(_translate("Naive_Bayes_Dialog", "Finish"))
from open_model_btn import Open_Model_Btn
from save_file_btn import Save_File_Btn
from save_model_btn import Save_Model_Btn


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Naive_Bayes_Dialog = QtWidgets.QDialog()
    ui = Ui_Naive_Bayes_Dialog()
    ui.setupUi(Naive_Bayes_Dialog)
    Naive_Bayes_Dialog.show()
    sys.exit(app.exec_())
